
BINLIST = unblind installpkg

PROJECT = atools

TCLAP   = tclap

BDIR = bin
HDIR = include
CDIR = src
DDIR = dep$(if $(CMTCONFIG),/$(CMTCONFIG))
ODIR = obj$(if $(CMTCONFIG),/$(CMTCONFIG))
LDIR = lib$(if $(CMTCONFIG),/$(CMTCONFIG))

LIBLIST =

OBJLIST = base64 blind ConfigFile data math result utils


#-------------------------------------------------------------------
# There should be no need to change much below this point.
#-------------------------------------------------------------------

# Define the default compiler.
CXX      = g++ -std=c++0x
CXXL     = g++ -std=c++0x

HDRDIRS  = $(HDIR)
LIBDIRS  =

HDRSTR   = $(foreach dir,$(HDRDIRS),-I $(dir))
LIBSTR   = $(foreach dir,$(LIBDIRS),-L $(dir)) $(foreach lib,$(LIBLIST),-l$(lib))

CFLAGS   = -O -g -m64 -Wall -fPIC $(HDRSTR)
DFLAGS   =
LFLAGS   = -O -g -m64 -Wall -fPIC $(LIBSTR)

RM       = rm -rf
LN       = ln -nfs

# Required header files and libraries from other packages.
PKGHLIST =
PKGHDRS  = $(foreach pkg,$(PKGHLIST),$(HDIR)/$(pkg))

LIB      = $(LDIR)/lib$(subst /,,$(PROJECT)).so
BFILES   = $(foreach bin,$(BINLIST),$(BDIR)/$(bin))
OFILES   = $(foreach obj,$(OBJLIST),$(ODIR)/$(obj).o)
DFILES   = $(foreach dep,$(OBJLIST),$(DDIR)/$(dep).d)

all:    lib bin
bin:    $(BFILES)
lib:    $(LIB)
.PHONY: install checkusr tidy sweep clean


$(BDIR)/unblind: $(CDIR)/unblind.cc $(ODIR)/blind.o $(ODIR)/base64.o $(MAKEFILE_LIST)
	@ mkdir -p $(dir $@)
	$(CXXL) -o $@ $(filter-out $(MAKEFILE_LIST),$^) $(CFLAGS)


# Rule for the library.
$(LIB): $(OFILES) $(PKGHDRS) $(MAKEFILE_LIST) | $(LIBDIRS)
	@ mkdir -p $(dir $@)
	$(CXXL) -shared -o $@ $(OFILES) $(LFLAGS)

# Rules for dependency files.
$(DFILES): $(DDIR)/%.d: $(CDIR)/%.cc $(HDIR)/$(firstword $(subst /, ,$(PROJECT)))/%.hh $(MAKEFILE_LIST)
	@ mkdir -p $(dir $@)
	@ echo $(CXX) -MM -MF $@ -MT $$(echo $@ | sed "s,^$(DDIR),$(ODIR),g;s,\.d$$,\.o,g") $< -I $(HDIR)
	@ $(CXX) -MM -MF $@ -MT $$(echo $@ | sed "s,^$(DDIR),$(ODIR),g;s,\.d$$,\.o,g") $< $(DFLAGS) -I $(HDIR)

# Rules for objects.
$(OFILES): $(ODIR)/%.o: $(CDIR)/%.cc $(DDIR)/%.d $(PKGHDRS) $(MAKEFILE_LIST)
	@ mkdir -p $(dir $@)
	$(CXX) -o $@ -c $< $(CFLAGS)

# Include all existent dependency files.
include $(wildcard $(DFILES))

install: | checkusr $(LIB)
	@ install -d $(usr)/$(BDIR)
	@ install -d $(usr)/$(HDIR)/$(PROJECT)
	@ install -d $(usr)/$(HDIR)/$(TCLAP)
	@ install -d $(usr)/$(LDIR)
	@ echo "Installing binaries in $(usr)/$(BDIR)"
	@ install -D -m 755 $(BFILES)               $(usr)/$(BDIR)
	@ echo "Installing headers in $(usr)/include/$(PROJECT)"
	@ install -D -m 644 $(HDIR)/$(PROJECT)/*.hh $(usr)/$(HDIR)/$(PROJECT)
	@ echo "Installing headers in $(usr)/include/$(TCLAP)"
	@ install -D -m 644 $(HDIR)/$(TCLAP)/*      $(usr)/$(HDIR)/$(TCLAP)
	@ echo "Installing libraries in $(usr)/$(LDIR)"
	@ install -D -m 755 $(LIB)                  $(usr)/$(LDIR)

checkusr:
ifndef usr
	$(error $(shell echo -e '\e[91;1m')usr$(shell echo -e '\e[21m') variable is not set. Define $(shell echo -e '\e[1m')usr$(shell echo -e '\e[21m') to be the destination directory$(shell echo -e '\e[0m'))
endif

# This rule removes libraries that have been linked or copied in the
#    specified $(LDIR). These libraries may be needed to run the
#    program. Useful to change versions of the libraries used.
tidy:
	@ if [ $(LDIR) != "." ] && [ $(LDIR) != ".." ];	\
	then						\
		$(RM) $(LDIR);				\
	else						\
		$(RM) *.so;				\
	fi

# This rule cleans up any backups or links to libraries only needed
#    at compilation time.
sweep:
	@ $(RM) $(ELF).out `find -name '*~'` `find -regex '.*\/\.*\#.*'`
	@ if [ $(ODIR) != "." ] && [ $(ODIR) != ".." ];	\
	then						\
		$(RM) $(ODIR);				\
	else						\
		$(RM) *.o;				\
	fi
	@ if [ $(DDIR) != "." ] && [ $(DDIR) != ".." ];	\
	then						\
		$(RM) $(DDIR);				\
	else						\
		$(RM) *.d;				\
	fi

clean: tidy sweep
